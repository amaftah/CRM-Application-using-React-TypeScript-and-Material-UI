{"version":3,"file":"static/js/584.7847cb47.chunk.js","mappings":"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","sources":["pages/Customers.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Container,\n  Typography,\n  Avatar,\n  Button,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TablePagination,\n  TextField,\n  Card,\n  Grid,\n} from '@mui/material';\n\nconst customers = Array.from({ length: 50 }, (_, i) => ({\n  id: i + 1,\n  name: `Customer ${i + 1}`,\n  email: `customer${i + 1}@example.com`,\n  phone: `123-456-78${i}`,\n}));\n\nconst Customers: React.FC = () => {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [search, setSearch] = React.useState('');\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const filteredCustomers = customers.filter(\n    (customer) =>\n      customer.name.toLowerCase().includes(search.toLowerCase()) ||\n      customer.email.toLowerCase().includes(search.toLowerCase()) ||\n      customer.phone.includes(search)\n  );\n\n  return (\n    <Container\n      sx={{\n        background: 'linear-gradient(to right, #0f2027, #203a43, #2c5364)',\n        color: '#FFFFFF',\n        minHeight: '100vh',\n        padding: 4,\n        borderRadius: '20px',\n        boxShadow: '0px 15px 30px rgba(0, 0, 0, 0.5)',\n      }}\n    >\n      {/* Header Section */}\n      <Typography variant=\"h3\" gutterBottom>\n        Customers\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        Manage your customer information effectively.\n      </Typography>\n\n      {/* Search and Add Customer Section */}\n      <Grid container spacing={2} alignItems=\"center\" sx={{ marginBottom: 4 }}>\n        <Grid item xs={12} md={6}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            placeholder=\"Search customers...\"\n            value={search}\n            onChange={handleSearchChange}\n            sx={{\n              background: '#FFFFFF',\n              borderRadius: '5px',\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6} sx={{ textAlign: { xs: 'center', md: 'right' } }}>\n          <Button\n            variant=\"contained\"\n            sx={{\n              background: '#FFD700',\n              color: '#000',\n              '&:hover': { background: '#FFC107' },\n            }}\n          >\n            Add New Customer\n          </Button>\n        </Grid>\n      </Grid>\n\n      {/* Customers Table */}\n      <Card\n        sx={{\n          background: 'rgba(255, 255, 255, 0.1)',\n          boxShadow: '0px 5px 15px rgba(0, 0, 0, 0.2)',\n          backdropFilter: 'blur(10px)',\n          border: '1px solid rgba(255, 255, 255, 0.3)',\n          borderRadius: '20px',\n          padding: 2,\n        }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell sx={{ color: '#FFD700' }}>Avatar</TableCell>\n              <TableCell sx={{ color: '#FFD700' }}>Name</TableCell>\n              <TableCell sx={{ color: '#FFD700' }}>Email</TableCell>\n              <TableCell sx={{ color: '#FFD700' }}>Phone</TableCell>\n              <TableCell sx={{ color: '#FFD700' }}>Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredCustomers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((customer) => (\n              <TableRow key={customer.id}>\n                <TableCell>\n                  <Avatar sx={{ bgcolor: '#FFD700' }}>{customer.name.charAt(0)}</Avatar>\n                </TableCell>\n                <TableCell>{customer.name}</TableCell>\n                <TableCell>{customer.email}</TableCell>\n                <TableCell>{customer.phone}</TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    sx={{ marginRight: 1, background: '#1E90FF', color: '#FFFFFF' }}\n                  >\n                    Edit\n                  </Button>\n                  <Button\n                    variant=\"contained\"\n                    size=\"small\"\n                    sx={{ background: '#FF6347', color: '#FFFFFF' }}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n\n        {/* Pagination */}\n        <TablePagination\n          component=\"div\"\n          count={filteredCustomers.length}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          sx={{ color: '#FFFFFF' }}\n        />\n      </Card>\n    </Container>\n  );\n};\n\nexport default Customers;\n"],"names":["customers","Array","from","length","_","i","id","name","concat","email","phone","Customers","page","setPage","React","rowsPerPage","setRowsPerPage","search","setSearch","filteredCustomers","filter","customer","toLowerCase","includes","_jsxs","Container","sx","background","color","minHeight","padding","borderRadius","boxShadow","children","_jsx","Typography","variant","gutterBottom","Grid","container","spacing","alignItems","marginBottom","item","xs","md","TextField","fullWidth","placeholder","value","onChange","event","target","textAlign","Button","Card","backdropFilter","border","Table","TableHead","TableRow","TableCell","TableBody","slice","map","Avatar","bgcolor","charAt","size","marginRight","TablePagination","component","count","onPageChange","handleChangePage","newPage","onRowsPerPageChange","parseInt"],"sourceRoot":""}